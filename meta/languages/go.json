{
  "meta": {
    "keyword": "break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer",
    "constant": "true false iota nil",
    "typename": "bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune",
    "built_in": "append cap close complex copy imag len make new panic print println real recover delete"
  },
  "syntax": {
    "pairs": [
      { "open": 1, "close": 2 },
      { "open": 3, "close": 4 },
      { "open": 5, "close": 6 }
    ],
    "single_line_comment": "//"
  },
  "root": {
    "illegal": "</",
    "contains": [
      { "className": "operator", "begin": "\\{", "extra": 1 },
      { "className": "operator", "begin": "\\}", "extra": 2 },
      { "className": "operator", "begin": "\\(", "extra": 3 },
      { "className": "operator", "begin": "\\)", "extra": 4 },
      { "className": "operator", "begin": "\\[", "extra": 5 },
      { "className": "operator", "begin": "\\]", "extra": 6 },
      {
        "className": "ident",
        "begin": "[a-zA-Z_]\\w*"
      },
      {
        "className": "comment",
        "begin": "//",
        "end": "$"
      },
      {
        "className": "comment",
        "begin": "/\\*",
        "end": "\\*/"
      },
      {
        "className": "string",
        "begin": "\"",
        "end": "\"",
        "illegal": "\\n",
        "contains": [
          {
            "begin": "\\\\[\\s\\S]"
          }
        ]
      },
      {
        "className": "string",
        "begin": "'",
        "end": "[^\\\\]'"
      },
      {
        "className": "string",
        "begin": "`",
        "end": "`"
      },
      {
        "className": "number",
        "begin": "\\b(0[xX][a-fA-F0-9]+|(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)[dflsi]?"
      },
      {
        "className": "number",
        "begin": "\\b(0[xX][a-fA-F0-9]+|(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)"
      }
    ]
  }
}